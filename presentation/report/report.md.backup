---
## Front matter
title: "Протокол маршрутизации OSPF"
subtitle: "Сетевые технологии"
author: "Ищенко Ирина НПИбд-02-22"

## Generic otions
lang: ru-RU
toc-title: "Содержание"

## Bibliography
bibliography: bib/cite.bib
csl: pandoc/csl/gost-r-7-0-5-2008-numeric.csl

## Pdf output format
toc: true # Table of contents
toc-depth: 2
lof: true # List of figures
lot: true # List of tables
fontsize: 12pt
linestretch: 1.5
papersize: a4
documentclass: scrreprt
## I18n polyglossia
polyglossia-lang:
  name: russian
  options:
	- spelling=modern
	- babelshorthands=true
polyglossia-otherlangs:
  name: english
## I18n babel
babel-lang: russian
babel-otherlangs: english
## Fonts
mainfont: IBM Plex Serif
romanfont: IBM Plex Serif
sansfont: IBM Plex Sans
monofont: IBM Plex Mono
mathfont: STIX Two Math
mainfontoptions: Ligatures=Common,Ligatures=TeX,Scale=0.94
romanfontoptions: Ligatures=Common,Ligatures=TeX,Scale=0.94
sansfontoptions: Ligatures=Common,Ligatures=TeX,Scale=MatchLowercase,Scale=0.94
monofontoptions: Scale=MatchLowercase,Scale=0.94,FakeStretch=0.9
mathfontoptions:
## Biblatex
biblatex: true
biblio-style: "gost-numeric"
biblatexoptions:
  - parentracker=true
  - backend=biber
  - hyperref=auto
  - language=auto
  - autolang=other*
  - citestyle=gost-numeric
## Pandoc-crossref LaTeX customization
figureTitle: "Рис."
tableTitle: "Таблица"
listingTitle: "Листинг"
lofTitle: "Список иллюстраций"
lotTitle: "Список таблиц"
lolTitle: "Листинги"
## Misc options
indent: true
header-includes:
  - \usepackage{indentfirst}
  - \usepackage{float} # keep figures where there are in the text
  - \floatplacement{figure}{H} # keep figures where there are in the text
---

# Введение

OSPF (Open Shortest Path First) — открытый протокол маршрутизации, разработанный для сетей IP рабочей группой Internet Engineering Task Force (IETF). Основой протокола стал алгоритм поиска наикратчайшего пути (SPF), также известный как алгоритм Дейкстры. OSPF был создан как ответ на растущие потребности крупных сетей, где классический протокол RIP оказался недостаточно эффективным.

Рабочая группа IETF начала разработку OSPF в 1988 году, стремясь создать высокоэффективный протокол внутренней маршрутизации (IGP), который мог бы использоваться в Internet — глобальной сети, объединяющей научные учреждения, университеты, государственные и частные организации. Основу протокола составили достижения нескольких направлений исследований, таких как:

- алгоритм SPF, впервые использованный в Arpanet компанией Bolt, Beranek и Newman (1978);

- работы Радии Перлман в области отказоустойчивости при распространении маршрутной информации (1988);

- исследования маршрутизации в отдельных областях, проведенные компанией BBN (1986);

-развитие протокола IS-IS в рамках OSI.

OSPF обладает двумя ключевыми характеристиками. Во-первых, это открытый протокол, спецификация которого опубликована в виде RFC 1247 и доступна для широкого использования. Во-вторых, он основан на алгоритме SPF, который обеспечивает эффективную маршрутизацию путем нахождения оптимальных путей в сети.

Данный доклад посвящен рассмотрению особенностей OSPF, его архитектуры, преимуществ, недостатков и практического применения в современных сетях.

# Протокол кратчайшего пути

Протокол кратчайшего пути (OSPF) - это протокол маршрутизации с выявлением маршрутов по состоянию связи, разработанный для сетей IP и основанный на алгоритме поиска кратчайшего пути (SPF). OSPF - это протокол внутренних шлюзов (IGP).

В сетях OSPF маршрутизаторы или системы из одной области поддерживают одну и ту же базу данных выявленных маршрутов, описывающую топологию области. Каждый маршрутизатор или система в области создает свою базу данных информации о состоянии каналов, которая состоит из объявлений маршрутов (LSAs), полученных от всех маршрутизаторов или систем в области, а также от LSA, генерирующихся самостоятельно. LSA - это пакет, содержащий сведения о соседях и оценку пути. Используя базы данных с выявлением маршрутов по состоянию связи, каждый маршрутизатор или сервер с помощью алгоритма поиска кратчайшего пути (SPF) строит остовное дерево путей, в котором корнем является сам маршрутизатор или сервер.

Протокол OSPF обладает следующими ключевыми преимуществами:
- По сравнению с такими протоколами дистанционно-векторной маршрутизации, как протокол информации о маршрутизации (RIP), OSPF больше подходит для обслуживания больших неоднородных сетевых комплексов. OSPF позволяет вычислять пути маршрутизации за очень короткое время, если топология сети меняется.
- С помощью протокола OSPF можно разделить автономную систему (AS) на отдельные области и обрабатывать их топологии отдельно, чтобы снизить поток маршрутизации OSPF и уменьшить размер базы данных маршрутов каждой области.
- OSPF обеспечивает равноценую маршрутизацию с обходными путями. С помощью различных транзитных узлов можно добавлять дополнительные маршруты в стек TCP [@ibm_ospf].

## Протокол приветствия Hello и обмен базами данных маршрутов по состоянию сети

После того, как маршрутизаторы или серверы сети OSPF настраивают интерфейсы, они отправляют через интерфейсы OSPF пакеты Hello с помощью протокола приветствия Hello, для поиска соседей. Соседями являются маршрутизаторы или серверы, имеющие интерфейсы в общей сети. Затем они обмениваются собственными базами данных маршрутов для установления связи.

На следующем рисунке изображен процесс поиска соседей и установления связи между двумя системами в подсети 9.7.85.0. Каждая система имеет интерфейс OSPF в общей подсети 9.7.85.0 (интерфейс 9.7.85.1 для системы A и интерфейс 9.7.85.2 для системы B). Подсеть 9.7.85.0 входит в область 1.1.1.1 (рис. [-@fig:001]).

![Протокол OSPF Hello и обмен базами данных](image/1_1.gif){#fig:001 width=70%}

1. Этап EXSTART 

Это первый этап обмена базами данных выявлением маршрутов по состоянию связи. Среди двух систем определяются главная и подчиненная.

2. Этап EXCHANGE

Две системы обмениваются пакетами описания баз данных для поиска пакетов LSA, которые отсутсвуют в базе данных каждой системы. Найденные новые LSA система добавляет в список повторной передачи.

3. Этап LOADING

Каждый сервер отправляет соседу (в данном примере, другой системе) пакет с выявлением маршрутов по состоянию связи с запросом переслать все LSA, которые были добавлены с список повторной передачи на этапе EXCHANGE. В ответ на запрос сосед отправляет LSA в пакете обновления маршрутов.

4. Этап FULL

После того как системы завершают обмен LSA и синхронизируют свои базы данных, между ними устанавливается соответствие.

После установления такого соответсвия каждый маршрутизатор и сервер периодически отправляет свои LSA соседям для обновления всех баз данных. Путем сравнения полученных LSA маршрутизаторы или серверы одной области отслеживают все изменения в топологии области и соответственно обновляют свои базы данных маршрутов [@rfc2328].

Помимо пакета Hello выделяют также еще четыре типа пакетов (табл. [-@tbl:01]).
 
: Типы пакетов протокола OSPF {#tbl:01}

| Тип пакета протокола OSPF              | Описание                                                                                         |
|----------------------------------------|-------------------------------------------------------------------------------------------------|
| Тип 1 – Пакет приветствия              | Используется для создания и поддержки таблицы соседних устройств                                |
| Тип 2 – Пакет описания базы данных     | Описывает содержимое базы данных (Database Description Packet – DBD) состояния каналов OSPF-маршрутизатора |
| Тип 3 – Запрос информации о состоянии  | Запрашивает отдельные фрагменты базы данных состояния каналов маршрутизатора                    |
| Тип 4 – Обновление состояния каналов   | Передает объявления о состоянии каналов (Link-state Advertisements – LSA) соседним маршрутизаторам |
| Тип 5 – Подтверждение получения        | Подтверждает получение от соседнего устройства объявления LSA (Link-state Acknowledgement – LSACK) |


## Отмеченный маршрутизатор и резервный отмеченный маршрутизатор

В сетях OSPF с параллельным доступом, в которых есть не меньше двух присоединенных маршрутизаторов, отмеченный маршрутизатор и резервный отмеченный маршрутизатор выбираются с помощью протокола приветствия Hello. (Сеть с параллельным доступом - это сеть, в которой несколько устройств могут подключаться и обмениваться данными одновременно.)

Отмеченный маршрутизатор создает LSA для всей сети с параллельным доступом, передает их другим маршрутизаторам сети и определяет смежные маршрутизаторы. Все остальные маршрутизаторы сети являются смежными для отмеченного маршрутизатора. Отмеченный маршрутизатор уменьшает сетевой поток и размер базы данных маршрутов сети.

Резервный отмеченный маршрутизатор отличается от остальных только тем, что для него необходимо отдельно устанавливать смежность со всеми маршрутизаторами сети (включая отмеченный). Резервный отмеченный маршрутизатор становится основным, если предыдущий отмеченный маршрутизатор выходит из строя.

На рисунке 1, подсеть 9.7.85.0 является коммутационной сетью. Таким образом, маршрутизаторы в подсети 9.7.85.0 выбирают основной и резервный отмеченные маршрутизаторы с помощью протокола приветствия. На данном примере, сервер A выбран основным отмеченным маршрутизатором, а сервер B - резервным.

## Разделение автономной сети OSPF на области

В отличии от RIP, OSPF может работать внутри иерархии.Самой большой сущностью иерархии является автономная система. Автономная система - это группа сетей с общим администрированием и стратегией маршрутизации. Автономная система может быть разделена на области, соединенные между собой с помощью маршрутизаторов. Область состоит из группы смежных сетей и присоединенных хостов. Топология области является невидимой для сущностей вне области. Маршрутизаторы внутри области имеют одинаковые базы данных с информацией о состоянии каналов. Топология отдельных областей позволяет сократить потоки маршрутизации и уменьшить базу данных информации о состоянии каналов для каждой отдельной области.

Маршрутизатор, расположенный на границе областей OSPF и соединяющий эти области с сетевой магистралью, называется граничным маршрутизатором. Граничный маршрутизатор имеет несколько интерфейсов для нескольких областей и поддерживает отдельные базы данных информации о состоянии каналов для каждой области [@kulyabov2008].

В следующем примере (рис. [-@fig:002]) настроены две области (область 1.1.1.1 и область 2.2.2.2). Сервер B является граничным маршрутизатором с интерфейсом 9.7.85.2, подключенным к области 1.1.1.1, и интерфейсом 9.5.104.241, подключенным к области 2.2.2.2. Сервер B имеет две базы данных информации о состоянии каналов, по одной для каждой области. Сервер B устанавливает смежность между сервером A и маршрутизатором C в области 1.1.1.1 через интерфейс 9.7.85.2, и между сервером D в области 2.2.2.2 через интерфейс 9.5.104.241.

![Разделение автономной сети OSPF на области](image/1_2.gif){#fig:002 width=70%}

## Пример топологии сети для демонстрации работы протокола OSPF

Соединим два маршрутизатора VyOS (рис. [-@fig:003]).

![Топология сети](image/top.png){#fig:003 width=70%}

Для маршрутизатора msk-ioithenko-gw-01 (10.1.1.1) настроим Loopback-интерфейс, который будет использоваться как Router ID для OSPF. 
Интерфейс eth1 настроим с IP-адресом из сети 192.168.0.0/24. 
Включим OSPF для сети, добавив сеть 192.168.0.0/24 в область 0.
Настроим распространение маршрута по умолчанию: всегда анонсировать маршрут по умолчанию с метрикой 10 и типом E2.
Настроим логирование изменений соседства OSPF.
Установим Router ID: 10.1.1.1
Настроить перераспределение подключённых маршрутов: перераспределять маршруты, используя route-map для фильтрации.
Создадим route-map для перераспределения: Разрешить перераспределение только маршрута из loopback (рис. [-@fig:004]).

![Настройка msk-ioithenko-gw-01](image/1.png){#fig:004 width=70%}

Повторим шаги для msk-ioithenko-gw-02 (10.2.2.2) за исключением настройки распростанения маршрута по умолчанию (рис. [-@fig:005]). Интерфейс eth1 настроен с IP-адресом из сети 192.168.0.0/24.

![Настройка msk-ioithenko-gw-02](image/2.png){#fig:005 width=70%}

Проверим корректность конфигурации с помощью вывода соседства и маршрутной таблицы (рис. [-@fig:006] и [-@fig:007]). 

![Проверка соседства для первого маршрутизатора](image/3.png){#fig:006 width=70%}

![Проверка соседства для второго маршрутизатора](image/4.png){#fig:007 width=70%}

Проанализируем результаты для msk-ioithenko-gw-02.
Команда show ip ospf neighbor показывает успешное установление OSPF-соседства между узлом msk-ioithenko-gw-02 и соседом с Router ID 10.1.1.1:

Neighbor ID: 10.1.1.1 — это Router ID узла msk-ioithenko-gw-01.
Pri: 1 — приоритет для выбора DR/BDR (выставлен по умолчанию).
State: Full/Backup — текущий узел является Backup Designated Router (BDR), а сосед — DR.
Dead Time: 33.793s — время до истечения таймера Dead Timer.
Address: 192.168.0.1 — IP-адрес соседа.
Interface: eth1 (192.168.0.2) — интерфейс, через который установлено соседство.

Вывод: OSPF работает корректно, соседство успешно установлено.

Команда show ip route ospf показывает маршруты, полученные через OSPF:

```O> 0.0.0.0/0 [110/10]:*```

Это маршрут по умолчанию (0.0.0.0/0), анонсированный узлом msk-ioithenko-gw-01.
Метрика: 10 (настроена на узле msk-ioithenko-gw-01 в конфигурации OSPF с опцией default-information originate metric 10).
Путь: через 192.168.0.1, интерфейс eth1.

```O> 10.1.1.1/32 [110/20]:*```

Это маршрут к loopback-интерфейсу узла msk-ioithenko-gw-01 (10.1.1.1/32).
Метрика: 20 (более высокая, так как маршрут перешёл в таблицу через OSPF с настройкой metric-type 2).
Путь: через 192.168.0.1, интерфейс eth1.

```O 192.168.0.0/24 [110/100]:```

Это подключённая сеть OSPF (area 0), к которой относится интерфейс eth1.
Метрика: 100 — стандартная стоимость сети для OSPF.

Вывод: Узел msk-ioithenko-gw-02 успешно получил маршруты от соседнего узла и может направлять трафик через маршрут по умолчанию.

Также рассмотрим пакет протокола OSPF, захваченный в Wireshark (рис. [-@fig:008]).

![Hello-пакет](image/5.png){#fig:008 width=70%}

**Поля OSPF Hello-пакета**:

Network Mask: 255.255.255.0 — маска подсети интерфейса, с которого отправлен Hello-пакет (сеть 192.168.0.0/24).
Hello Interval: 10 — интервал отправки Hello-пакетов (10 секунд, стандартное значение).
Router Priority: 1 — приоритет маршрутизатора для выбора DR/BDR.
Dead Interval: 40 — таймер Dead Interval (40 секунд, стандартное значение).
Designated Router (DR): 192.168.0.1 — маршрутизатор-отправитель уже выбран в качестве DR.
Backup Designated Router (BDR): 192.168.0.2 — резервный маршрутизатор (BDR).
Active Neighbor: 10.2.2.2 — соседний маршрутизатор, который установил связь (Router ID Node 2).

Подведем итог, информация из Hello-пакета соответствует выводу команд на маршрутизаторах.

# Заключение

Протокол OSPF (Open Shortest Path First) является одним из ключевых компонентов современных сетей на основе IP. Его широкое использование обусловлено высокой эффективностью, масштабируемостью и надежностью в процессе маршрутизации.

OSPF обеспечивает быстрый обмен информацией о состоянии сети и динамически адаптируется к изменениям, минимизируя влияние сбоев и обеспечивая бесперебойную работу. Его особенности, такие как использование алгоритма Дейкстры для расчета кратчайшего пути, поддержка иерархической маршрутизации и надежная синхронизация таблиц маршрутов, делают его особенно полезным в крупных сетях.

Типы пакетов OSPF, такие как приветственные сообщения, описание базы данных, запросы, обновления и подтверждения, обеспечивают четкую структуру взаимодействия между маршрутизаторами. Это гарантирует точность и согласованность маршрутов.

В целом, протокол OSPF остается стандартом для внутренних сетей (IGP), успешно справляясь с задачами оптимальной маршрутизации и эффективно решая вызовы, возникающие в современных сложных сетевых архитектурах.


# Список литературы{.unnumbered}

::: {#refs}
:::
